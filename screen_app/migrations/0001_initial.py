# Generated by Django 5.1.7 on 2025-04-18 17:29

import datetime
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("machineapp", "0009_alter_machinelogintracker_unique_together"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Defects",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "visual_defect",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Dry Solder", "Dry Solder"),
                            ("No Solder", "No Solder"),
                            ("Shorting/ Bridging", "Shorting/ Bridging"),
                            ("Pad Damage", "Pad Damage"),
                            ("Component Tombstone", "Component Tombstone"),
                            ("Solder Ball", "Solder Ball"),
                            ("Green Masking improper", "Green Masking improper"),
                            ("Masking Improper", "Masking Improper"),
                            ("Component Shifted", "Component Shifted"),
                            ("Pad Lifted", "Pad Lifted"),
                            ("Component Damage/Break", "Component Damage/Break"),
                            ("Solder Projection", "Solder Projection"),
                            ("Track Cut (Open)", "Track Cut (Open)"),
                            ("Wrong Polarity", "Wrong Polarity"),
                            ("PTH Shorting", "PTH Shorting"),
                            ("Component Wrong", "Component Wrong"),
                            ("Component Missing", "Component Missing"),
                            ("Solder Dust", "Solder Dust"),
                            ("Pin Hole", "Pin Hole"),
                            ("Component Up Side Down", "Component Up Side Down"),
                            ("LED Defects", "LED Defects"),
                            (
                                "Microcontroller Pin Bend/Damage",
                                "Microcontroller Pin Bend/Damage",
                            ),
                            ("Solder Crack", "Solder Crack"),
                            ("Others", "Others"),
                        ],
                        default="Others",
                        max_length=100,
                    ),
                ),
                (
                    "programming_defect",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Programme does not accept", "Programme does not accept"),
                            ("Pin Voltage low", "Pin Voltage low"),
                            ("Others", "Others"),
                        ],
                        default="Others",
                        max_length=100,
                    ),
                ),
                (
                    "automatic_testing_defect",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Testing fail", "Testing fail"),
                            ("Others", "Others"),
                        ],
                        default="Others",
                        max_length=100,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MachineLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "location_name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Machine Location"
                    ),
                ),
                (
                    "min_skill_required",
                    models.IntegerField(verbose_name="Minimum Skill Required"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "status",
                    models.CharField(
                        choices=[("RUNNING", "Running"), ("STOPPED", "Stopped")],
                        default="STOPPED",
                        max_length=10,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="QSF",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "doc_number",
                    models.CharField(blank=True, default="QSF-13-06", max_length=20),
                ),
                ("rev_number", models.CharField(default="02", max_length=10)),
                ("rev_date", models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name="ControlChartStatistics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("x_bar", models.FloatField()),
                ("r", models.FloatField()),
                ("usl", models.FloatField(default=375)),
                ("lsl", models.FloatField(default=355)),
                (
                    "machine",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="control_chart_statistics",
                        to="machineapp.machine",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HistoricalControlChartStatistics",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("date", models.DateField()),
                ("x_bar", models.FloatField()),
                ("r", models.FloatField()),
                ("usl", models.FloatField(default=375)),
                ("lsl", models.FloatField(default=355)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "machine",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="machineapp.machine",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical control chart statistics",
                "verbose_name_plural": "historical control chart statisticss",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalSolderingBitRecord",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("station", models.CharField(default="DSL01_S01", max_length=100)),
                (
                    "doc_number",
                    models.CharField(
                        blank=True,
                        default="Doc-QSF-12-15",
                        max_length=50,
                        verbose_name="Doc. No.",
                    ),
                ),
                (
                    "part_name",
                    models.CharField(
                        choices=[
                            ("tsc_01", "TSC 01"),
                            ("tsc_02", "TSC 02"),
                            ("tsc_04", "TSC 04"),
                            ("tsc_05", "TSC 05"),
                            ("tsc_09", "TSC 09"),
                            ("ebe_01", "EBE 01"),
                            ("csl_01", "CSL 01"),
                            ("dtr_03", "DTR 03"),
                            ("dtr_05", "DTR 05"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "machine_location",
                    models.CharField(
                        choices=[
                            ("EFL01_S01", "EFL01_S01"),
                            ("EFL01_S02", "EFL01_S02"),
                            ("EFL01_S03", "EFL01_S03"),
                            ("EFL01_S04", "EFL01_S04"),
                            ("EFL01_S05", "EFL01_S05"),
                            ("EFL01_S06", "EFL01_S06"),
                            ("EFL01_S07", "EFL01_S07"),
                            ("EFL01_S08", "EFL01_S08"),
                            ("EFL01_S09", "EFL01_S09"),
                        ],
                        max_length=150,
                    ),
                ),
                (
                    "month",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "time",
                    models.TimeField(blank=True, default=django.utils.timezone.now),
                ),
                ("soldering_points_per_part", models.IntegerField(default=10)),
                (
                    "bit_size",
                    models.CharField(
                        choices=[("20d", "20D"), ("30d", "30D")], max_length=50
                    ),
                ),
                (
                    "date",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "produce_quantity_shift_a",
                    models.IntegerField(verbose_name="Produce Quantity Shift A"),
                ),
                (
                    "produce_quantity_shift_b",
                    models.IntegerField(verbose_name="Produce Quantity Shift B"),
                ),
                (
                    "total_quantity",
                    models.IntegerField(
                        default=500, verbose_name="Total Quantity (Both shifts)"
                    ),
                ),
                (
                    "total_soldering_points",
                    models.IntegerField(
                        default=500, verbose_name="Total Soldering points/day"
                    ),
                ),
                (
                    "bit_life_remaining",
                    models.IntegerField(
                        default=500, verbose_name="Bit Life Remaining (Parts in Nos.)"
                    ),
                ),
                ("bit_change_date", models.DateField(verbose_name="Bit Change Date")),
                (
                    "prepared_by",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "approved_by",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "defect_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("visual", "Visual Defects"),
                            ("programming", "Programming Defects"),
                            ("automatic_testing", "Automatic Testing Defects"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="Defect Type",
                    ),
                ),
                (
                    "defect",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Defect"
                    ),
                ),
                (
                    "custom_defect",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Custom Defect",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "operator_name",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "machine_no",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="screen_app.machinelocation",
                        verbose_name="Process/Operation",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Robotic Soldering Bit Replacement Record",
                "verbose_name_plural": "historical Robotic Soldering Bit Replacement Records",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="ProcessMachineMapping",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("station", models.CharField(max_length=100)),
                ("process_no", models.CharField(blank=True, max_length=100, null=True)),
                ("process", models.CharField(max_length=100)),
                ("part_name", models.CharField(blank=True, max_length=100, null=True)),
                ("machine_name", models.CharField(max_length=100)),
                ("control_number", models.CharField(max_length=100)),
                ("Usl", models.FloatField(blank=True, default=0, null=True)),
                ("Lsl", models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                "verbose_name": "Process-Machine Mapping",
                "verbose_name_plural": "Process-Machine Mappings",
                "unique_together": {("station", "process")},
            },
        ),
        migrations.CreateModel(
            name="PChartData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "doc_number",
                    models.CharField(
                        blank=True, default="QSF 12-05", max_length=20, null=True
                    ),
                ),
                (
                    "rev_number",
                    models.CharField(
                        blank=True, default="Rev 09 ", max_length=20, null=True
                    ),
                ),
                ("location", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "part_number_and_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "operation_number_and_stage_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("department", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "shift",
                    models.CharField(
                        blank=True,
                        choices=[("A", "A"), ("B", "B")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "time",
                    models.TimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "date",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "date_control_limits_calculated",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                ("sample_size", models.IntegerField()),
                ("nonconforming_units", models.IntegerField()),
                ("proportion", models.FloatField(blank=True, null=True)),
                ("ucl_p", models.FloatField(blank=True, null=True)),
                ("lcl_p", models.FloatField(blank=True, null=True)),
                (
                    "process_machine",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pchart_data",
                        to="screen_app.processmachinemapping",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HistoricalPChartData",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "doc_number",
                    models.CharField(
                        blank=True, default="QSF 12-05", max_length=20, null=True
                    ),
                ),
                (
                    "rev_number",
                    models.CharField(
                        blank=True, default="Rev 09 ", max_length=20, null=True
                    ),
                ),
                ("location", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "part_number_and_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "operation_number_and_stage_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("department", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "shift",
                    models.CharField(
                        blank=True,
                        choices=[("A", "A"), ("B", "B")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "time",
                    models.TimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "date",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "date_control_limits_calculated",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                ("sample_size", models.IntegerField()),
                ("nonconforming_units", models.IntegerField()),
                ("proportion", models.FloatField(blank=True, null=True)),
                ("ucl_p", models.FloatField(blank=True, null=True)),
                ("lcl_p", models.FloatField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "process_machine",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="screen_app.processmachinemapping",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical p chart data",
                "verbose_name_plural": "historical p chart datas",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalControlChartReading",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("date", models.DateField()),
                ("time", models.TimeField(blank=True, editable=False)),
                ("reading1", models.FloatField()),
                ("reading2", models.FloatField(blank=True, null=True)),
                ("reading3", models.FloatField(blank=True, null=True)),
                ("reading4", models.FloatField(blank=True, null=True)),
                ("reading5", models.FloatField(blank=True, null=True)),
                (
                    "usl",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "lsl",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("last_notification_time", models.DateTimeField(blank=True, null=True)),
                ("remaining_entries", models.IntegerField(default=5)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "machine",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="machineapp.machine",
                    ),
                ),
                (
                    "process_machine",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="screen_app.processmachinemapping",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical control chart reading",
                "verbose_name_plural": "historical control chart readings",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="MonthlyChecklistItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("station", models.CharField(blank=True, max_length=100)),
                (
                    "doc_number",
                    models.CharField(
                        blank=True, default="QSF 13-06", max_length=20, null=True
                    ),
                ),
                (
                    "rev_number",
                    models.CharField(
                        blank=True, default="Rev 02 ", max_length=20, null=True
                    ),
                ),
                (
                    "rev_date",
                    models.DateField(
                        blank=True, default=datetime.date(2022, 12, 31), null=True
                    ),
                ),
                (
                    "time",
                    models.TimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "shift",
                    models.CharField(
                        blank=True,
                        choices=[("A", "A"), ("B", "B")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "machine_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "control_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("process_no", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "month_year",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "date",
                    models.DateField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "Remark_12",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "checked_by_Operator",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="✔",
                        max_length=100,
                    ),
                ),
                (
                    "approved_by_Supervisor",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="",
                        max_length=100,
                    ),
                ),
                (
                    "machine_location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="screen_app.machinelocation",
                        verbose_name="Process/Operation",
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "process_machine",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="monthly_process_machine",
                        to="screen_app.processmachinemapping",
                    ),
                ),
                (
                    "qsf_document",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="monthly_checklists",
                        to="screen_app.qsf",
                    ),
                ),
            ],
            options={
                "verbose_name": "Maintenance Checklist For Monthly",
                "verbose_name_plural": "Maintenance Checklists For Monthly",
            },
        ),
        migrations.CreateModel(
            name="HistoricalWeeklyChecklistItem",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("station", models.CharField(blank=True, max_length=100)),
                (
                    "doc_number",
                    models.CharField(
                        blank=True, default="QSF 13-06", max_length=20, null=True
                    ),
                ),
                (
                    "rev_number",
                    models.CharField(
                        blank=True, default="Rev 02 ", max_length=20, null=True
                    ),
                ),
                (
                    "rev_date",
                    models.DateField(
                        blank=True, default=datetime.date(2022, 12, 31), null=True
                    ),
                ),
                (
                    "shift",
                    models.CharField(
                        blank=True,
                        choices=[("A", "A"), ("B", "B")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "machine_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "control_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("process_no", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "month_year",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "date",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "Remark_8",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "Remark_9",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "Remark_10",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "Remark_11",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "checked_by_Operator",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="✔",
                        max_length=100,
                    ),
                ),
                (
                    "approved_by_Supervisor",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="✘",
                        max_length=100,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "machine_location",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="screen_app.machinelocation",
                        verbose_name="Process/Operation",
                    ),
                ),
                (
                    "process_machine",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="screen_app.processmachinemapping",
                    ),
                ),
                (
                    "qsf_document",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="screen_app.qsf",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Maintenance Checklist For Weekly",
                "verbose_name_plural": "historical Maintenance Checklists For Weekly",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalStartUpCheckSheet",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "doc_number",
                    models.CharField(
                        blank=True, default="QSF 12-05", max_length=20, null=True
                    ),
                ),
                (
                    "rev_number",
                    models.CharField(
                        blank=True, default="Rev 09 ", max_length=20, null=True
                    ),
                ),
                (
                    "rev_date",
                    models.DateField(
                        blank=True, default=datetime.date(2024, 11, 10), null=True
                    ),
                ),
                (
                    "shift",
                    models.CharField(
                        blank=True,
                        choices=[("A", "A"), ("B", "B")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "time",
                    models.TimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "revision_no",
                    models.IntegerField(blank=True, null=True, verbose_name="Rev. No."),
                ),
                (
                    "effective_date",
                    models.DateField(
                        blank=True,
                        default=django.utils.timezone.now,
                        verbose_name="Eff. Date",
                    ),
                ),
                (
                    "machine_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "control_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("process_no", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "month",
                    models.DateField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "checkpoint_1",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 1",
                    ),
                ),
                (
                    "checkpoint_2",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 2",
                    ),
                ),
                (
                    "checkpoint_3",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 3",
                    ),
                ),
                (
                    "checkpoint_4",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 4",
                    ),
                ),
                (
                    "checkpoint_5",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 5",
                    ),
                ),
                (
                    "checkpoint_6",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 6",
                    ),
                ),
                (
                    "checkpoint_7",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 7",
                    ),
                ),
                (
                    "checkpoint_8",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 8",
                    ),
                ),
                (
                    "checkpoint_9",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 9",
                    ),
                ),
                (
                    "checkpoint_10",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 10",
                    ),
                ),
                (
                    "checkpoint_11",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 11",
                    ),
                ),
                (
                    "checkpoint_12",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 12",
                    ),
                ),
                (
                    "checkpoint_13",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 13",
                    ),
                ),
                (
                    "checkpoint_14",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 14",
                    ),
                ),
                (
                    "checkpoint_15",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 15",
                    ),
                ),
                (
                    "checkpoint_16",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 16",
                    ),
                ),
                (
                    "checkpoint_17",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 17",
                    ),
                ),
                (
                    "checkpoint_18",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 18",
                    ),
                ),
                (
                    "checkpoint_19",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 19",
                    ),
                ),
                (
                    "checkpoint_20",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 20",
                    ),
                ),
                (
                    "checkpoint_21",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 21",
                    ),
                ),
                (
                    "checkpoint_22",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 22",
                    ),
                ),
                (
                    "checkpoint_23",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 23",
                    ),
                ),
                (
                    "checkpoint_24",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 24",
                    ),
                ),
                (
                    "checkpoint_25",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 25",
                    ),
                ),
                (
                    "verified_by",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        default="✔",
                        max_length=1,
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "process_operation",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="screen_app.machinelocation",
                        verbose_name="Process/Operation",
                    ),
                ),
                (
                    "process_machine",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="screen_app.processmachinemapping",
                    ),
                ),
                (
                    "qsf_document",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="screen_app.qsf",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Start Up Check Sheet",
                "verbose_name_plural": "historical Start Up Check Sheets",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalRejectionSheet",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("station", models.CharField(blank=True, max_length=100)),
                (
                    "doc_number",
                    models.CharField(
                        blank=True, default="QSF 22-01", max_length=20, null=True
                    ),
                ),
                (
                    "rev_number",
                    models.CharField(
                        blank=True, default="Rev 00 ", max_length=20, null=True
                    ),
                ),
                ("rev_date", models.DateField(blank=True, null=True)),
                (
                    "shift",
                    models.CharField(
                        blank=True,
                        choices=[("A", "A"), ("B", "B")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "time",
                    models.TimeField(blank=True, default=django.utils.timezone.now),
                ),
                ("stage", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "part_description",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "month",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "date",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "opening_balance",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "receive_from_rework",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "total_pass_qty",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "total_rejection_qty",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "closing_balance",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "operator_signature",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="✔",
                        max_length=1,
                    ),
                ),
                (
                    "verified_by",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="✘",
                        max_length=1,
                    ),
                ),
                (
                    "defect_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("visual", "Visual Defects"),
                            ("programming", "Programming Defects"),
                            ("automatic_testing", "Automatic Testing Defects"),
                            ("adhesive", "Adhesive Application Defects"),
                            ("pcb_screwing", "PCB Screwing Defects"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="Defect Type",
                    ),
                ),
                (
                    "defect",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Defect"
                    ),
                ),
                (
                    "custom_defect",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Custom Defect",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "operator_name",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "process_machine",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="screen_app.processmachinemapping",
                    ),
                ),
                (
                    "qsf_document",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="screen_app.qsf",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Rejection Sheet",
                "verbose_name_plural": "historical Rejection Sheets",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalMonthlyChecklistItem",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("station", models.CharField(blank=True, max_length=100)),
                (
                    "doc_number",
                    models.CharField(
                        blank=True, default="QSF 13-06", max_length=20, null=True
                    ),
                ),
                (
                    "rev_number",
                    models.CharField(
                        blank=True, default="Rev 02 ", max_length=20, null=True
                    ),
                ),
                (
                    "rev_date",
                    models.DateField(
                        blank=True, default=datetime.date(2022, 12, 31), null=True
                    ),
                ),
                (
                    "time",
                    models.TimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "shift",
                    models.CharField(
                        blank=True,
                        choices=[("A", "A"), ("B", "B")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "machine_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "control_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("process_no", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "month_year",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "date",
                    models.DateField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "Remark_12",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "checked_by_Operator",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="✔",
                        max_length=100,
                    ),
                ),
                (
                    "approved_by_Supervisor",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="",
                        max_length=100,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "machine_location",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="screen_app.machinelocation",
                        verbose_name="Process/Operation",
                    ),
                ),
                (
                    "process_machine",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="screen_app.processmachinemapping",
                    ),
                ),
                (
                    "qsf_document",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="screen_app.qsf",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Maintenance Checklist For Monthly",
                "verbose_name_plural": "historical Maintenance Checklists For Monthly",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalFixtureCleaningRecord",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("station", models.CharField(blank=True, max_length=100)),
                (
                    "doc_number",
                    models.CharField(
                        blank=True, default="QSF 12-16", max_length=20, null=True
                    ),
                ),
                (
                    "rev_number",
                    models.CharField(
                        blank=True, default="Rev 00 ", max_length=20, null=True
                    ),
                ),
                ("rev_date", models.DateField(blank=True, null=True)),
                (
                    "month_year",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "shift",
                    models.CharField(
                        blank=True,
                        choices=[("A", "A"), ("B", "B")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "fixture_location",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "fixture_control_no",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "fixture_installation_date",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "date",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "time",
                    models.TimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "verification_tag_available",
                    models.CharField(
                        choices=[
                            ("Available", "Available"),
                            ("Not Available", "Not Available"),
                        ],
                        max_length=25,
                    ),
                ),
                (
                    "verification_tag_condition",
                    models.CharField(
                        choices=[
                            ("No Peel off", "NO PEEL OFF"),
                            ("No Damage", "NO DAMAGE"),
                            ("Not Available", "Not Available"),
                        ],
                        max_length=250,
                    ),
                ),
                (
                    "no_dust_on_fixture",
                    models.CharField(
                        choices=[
                            ("Available", "Available"),
                            ("Not Available", "Not Available"),
                        ],
                        max_length=25,
                    ),
                ),
                (
                    "no_epoxy_coating_on_fixture",
                    models.CharField(
                        choices=[
                            ("Available", "Available"),
                            ("Not Available", "Not Available"),
                        ],
                        max_length=25,
                    ),
                ),
                (
                    "operator_signature",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="✔",
                        max_length=1,
                    ),
                ),
                (
                    "supervisor_signature",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="✘",
                        max_length=1,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "operator_name",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "process_machine",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="screen_app.processmachinemapping",
                    ),
                ),
                (
                    "qsf_document",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="screen_app.qsf",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Fixture Cleaning Record",
                "verbose_name_plural": "historical Fixture Cleaning Records",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalDailyChecklistItem",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("station", models.CharField(blank=True, max_length=100)),
                (
                    "doc_number",
                    models.CharField(
                        blank=True, default="QSF 13-06", max_length=20, null=True
                    ),
                ),
                (
                    "rev_number",
                    models.CharField(
                        blank=True, default="Rev 02 ", max_length=20, null=True
                    ),
                ),
                (
                    "rev_date",
                    models.DateField(
                        blank=True, default=datetime.date(2022, 12, 31), null=True
                    ),
                ),
                (
                    "time",
                    models.TimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "shift",
                    models.CharField(
                        blank=True,
                        choices=[("A", "A"), ("B", "B")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "machine_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "control_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("process_no", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "month_year",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "date",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "Remark_1",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "Remark_2",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "Remark_3",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "Remark_4",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "Remark_5",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "Remark_6",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "Remark_7",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "checked_by_Operator",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="✔",
                        max_length=100,
                    ),
                ),
                (
                    "approved_by_Supervisor",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="✘",
                        max_length=100,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "machine_location",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="screen_app.machinelocation",
                        verbose_name="Process/Operation",
                    ),
                ),
                (
                    "process_machine",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="screen_app.processmachinemapping",
                    ),
                ),
                (
                    "qsf_document",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="screen_app.qsf",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Maintenance Checklist For Daily",
                "verbose_name_plural": "historical Maintenance Checklists For Daily",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="FixtureCleaningRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("station", models.CharField(blank=True, max_length=100)),
                (
                    "doc_number",
                    models.CharField(
                        blank=True, default="QSF 12-16", max_length=20, null=True
                    ),
                ),
                (
                    "rev_number",
                    models.CharField(
                        blank=True, default="Rev 00 ", max_length=20, null=True
                    ),
                ),
                ("rev_date", models.DateField(blank=True, null=True)),
                (
                    "month_year",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "shift",
                    models.CharField(
                        blank=True,
                        choices=[("A", "A"), ("B", "B")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "fixture_location",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "fixture_control_no",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "fixture_installation_date",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "date",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "time",
                    models.TimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "verification_tag_available",
                    models.CharField(
                        choices=[
                            ("Available", "Available"),
                            ("Not Available", "Not Available"),
                        ],
                        max_length=25,
                    ),
                ),
                (
                    "verification_tag_condition",
                    models.CharField(
                        choices=[
                            ("No Peel off", "NO PEEL OFF"),
                            ("No Damage", "NO DAMAGE"),
                            ("Not Available", "Not Available"),
                        ],
                        max_length=250,
                    ),
                ),
                (
                    "no_dust_on_fixture",
                    models.CharField(
                        choices=[
                            ("Available", "Available"),
                            ("Not Available", "Not Available"),
                        ],
                        max_length=25,
                    ),
                ),
                (
                    "no_epoxy_coating_on_fixture",
                    models.CharField(
                        choices=[
                            ("Available", "Available"),
                            ("Not Available", "Not Available"),
                        ],
                        max_length=25,
                    ),
                ),
                (
                    "operator_signature",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="✔",
                        max_length=1,
                    ),
                ),
                (
                    "supervisor_signature",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="✘",
                        max_length=1,
                    ),
                ),
                (
                    "operator_name",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "process_machine",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="FixtureCleaningRecord",
                        to="screen_app.processmachinemapping",
                    ),
                ),
                (
                    "qsf_document",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="FixtureCleaningRecord",
                        to="screen_app.qsf",
                    ),
                ),
            ],
            options={
                "verbose_name": "Fixture Cleaning Record",
                "verbose_name_plural": "Fixture Cleaning Records",
            },
        ),
        migrations.CreateModel(
            name="DailyChecklistItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("station", models.CharField(blank=True, max_length=100)),
                (
                    "doc_number",
                    models.CharField(
                        blank=True, default="QSF 13-06", max_length=20, null=True
                    ),
                ),
                (
                    "rev_number",
                    models.CharField(
                        blank=True, default="Rev 02 ", max_length=20, null=True
                    ),
                ),
                (
                    "rev_date",
                    models.DateField(
                        blank=True, default=datetime.date(2022, 12, 31), null=True
                    ),
                ),
                (
                    "time",
                    models.TimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "shift",
                    models.CharField(
                        blank=True,
                        choices=[("A", "A"), ("B", "B")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "machine_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "control_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("process_no", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "month_year",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "date",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "Remark_1",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "Remark_2",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "Remark_3",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "Remark_4",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "Remark_5",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "Remark_6",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "Remark_7",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "checked_by_Operator",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="✔",
                        max_length=100,
                    ),
                ),
                (
                    "approved_by_Supervisor",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="✘",
                        max_length=100,
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "machine_location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="screen_app.machinelocation",
                        verbose_name="Process/Operation",
                    ),
                ),
                (
                    "process_machine",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="daily_process_machine",
                        to="screen_app.processmachinemapping",
                    ),
                ),
                (
                    "qsf_document",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="daily_checklists",
                        to="screen_app.qsf",
                    ),
                ),
            ],
            options={
                "verbose_name": "Maintenance Checklist For Daily",
                "verbose_name_plural": "Maintenance Checklists For Daily",
            },
        ),
        migrations.CreateModel(
            name="RejectionSheet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("station", models.CharField(blank=True, max_length=100)),
                (
                    "doc_number",
                    models.CharField(
                        blank=True, default="QSF 22-01", max_length=20, null=True
                    ),
                ),
                (
                    "rev_number",
                    models.CharField(
                        blank=True, default="Rev 00 ", max_length=20, null=True
                    ),
                ),
                ("rev_date", models.DateField(blank=True, null=True)),
                (
                    "shift",
                    models.CharField(
                        blank=True,
                        choices=[("A", "A"), ("B", "B")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "time",
                    models.TimeField(blank=True, default=django.utils.timezone.now),
                ),
                ("stage", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "part_description",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "month",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "date",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "opening_balance",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "receive_from_rework",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "total_pass_qty",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "total_rejection_qty",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "closing_balance",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "operator_signature",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="✔",
                        max_length=1,
                    ),
                ),
                (
                    "verified_by",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="✘",
                        max_length=1,
                    ),
                ),
                (
                    "defect_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("visual", "Visual Defects"),
                            ("programming", "Programming Defects"),
                            ("automatic_testing", "Automatic Testing Defects"),
                            ("adhesive", "Adhesive Application Defects"),
                            ("pcb_screwing", "PCB Screwing Defects"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="Defect Type",
                    ),
                ),
                (
                    "defect",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Defect"
                    ),
                ),
                (
                    "custom_defect",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Custom Defect",
                    ),
                ),
                (
                    "defects",
                    models.ManyToManyField(blank=True, to="screen_app.defects"),
                ),
                (
                    "operator_name",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "process_machine",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="RejectionSheet",
                        to="screen_app.processmachinemapping",
                    ),
                ),
                (
                    "qsf_document",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="RejectionSheet",
                        to="screen_app.qsf",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rejection Sheet",
                "verbose_name_plural": "Rejection Sheets",
            },
        ),
        migrations.CreateModel(
            name="Screen",
            fields=[
                ("screen_id", models.AutoField(primary_key=True, serialize=False)),
                ("video_path", models.CharField(blank=True, max_length=100, null=True)),
                ("pdf_path", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "manager",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="screen_app.product",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SolderingBitRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("station", models.CharField(default="DSL01_S01", max_length=100)),
                (
                    "doc_number",
                    models.CharField(
                        blank=True,
                        default="Doc-QSF-12-15",
                        max_length=50,
                        verbose_name="Doc. No.",
                    ),
                ),
                (
                    "part_name",
                    models.CharField(
                        choices=[
                            ("tsc_01", "TSC 01"),
                            ("tsc_02", "TSC 02"),
                            ("tsc_04", "TSC 04"),
                            ("tsc_05", "TSC 05"),
                            ("tsc_09", "TSC 09"),
                            ("ebe_01", "EBE 01"),
                            ("csl_01", "CSL 01"),
                            ("dtr_03", "DTR 03"),
                            ("dtr_05", "DTR 05"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "machine_location",
                    models.CharField(
                        choices=[
                            ("EFL01_S01", "EFL01_S01"),
                            ("EFL01_S02", "EFL01_S02"),
                            ("EFL01_S03", "EFL01_S03"),
                            ("EFL01_S04", "EFL01_S04"),
                            ("EFL01_S05", "EFL01_S05"),
                            ("EFL01_S06", "EFL01_S06"),
                            ("EFL01_S07", "EFL01_S07"),
                            ("EFL01_S08", "EFL01_S08"),
                            ("EFL01_S09", "EFL01_S09"),
                        ],
                        max_length=150,
                    ),
                ),
                (
                    "month",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "time",
                    models.TimeField(blank=True, default=django.utils.timezone.now),
                ),
                ("soldering_points_per_part", models.IntegerField(default=10)),
                (
                    "bit_size",
                    models.CharField(
                        choices=[("20d", "20D"), ("30d", "30D")], max_length=50
                    ),
                ),
                (
                    "date",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "produce_quantity_shift_a",
                    models.IntegerField(verbose_name="Produce Quantity Shift A"),
                ),
                (
                    "produce_quantity_shift_b",
                    models.IntegerField(verbose_name="Produce Quantity Shift B"),
                ),
                (
                    "total_quantity",
                    models.IntegerField(
                        default=500, verbose_name="Total Quantity (Both shifts)"
                    ),
                ),
                (
                    "total_soldering_points",
                    models.IntegerField(
                        default=500, verbose_name="Total Soldering points/day"
                    ),
                ),
                (
                    "bit_life_remaining",
                    models.IntegerField(
                        default=500, verbose_name="Bit Life Remaining (Parts in Nos.)"
                    ),
                ),
                ("bit_change_date", models.DateField(verbose_name="Bit Change Date")),
                (
                    "prepared_by",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "approved_by",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "defect_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("visual", "Visual Defects"),
                            ("programming", "Programming Defects"),
                            ("automatic_testing", "Automatic Testing Defects"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="Defect Type",
                    ),
                ),
                (
                    "defect",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Defect"
                    ),
                ),
                (
                    "custom_defect",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Custom Defect",
                    ),
                ),
                (
                    "machine_no",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="screen_app.machinelocation",
                        verbose_name="Process/Operation",
                    ),
                ),
                (
                    "operator_name",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Robotic Soldering Bit Replacement Record",
                "verbose_name_plural": "Robotic Soldering Bit Replacement Records",
            },
        ),
        migrations.CreateModel(
            name="StartUpCheckSheet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "doc_number",
                    models.CharField(
                        blank=True, default="QSF 12-05", max_length=20, null=True
                    ),
                ),
                (
                    "rev_number",
                    models.CharField(
                        blank=True, default="Rev 09 ", max_length=20, null=True
                    ),
                ),
                (
                    "rev_date",
                    models.DateField(
                        blank=True, default=datetime.date(2024, 11, 10), null=True
                    ),
                ),
                (
                    "shift",
                    models.CharField(
                        blank=True,
                        choices=[("A", "A"), ("B", "B")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "time",
                    models.TimeField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "revision_no",
                    models.IntegerField(blank=True, null=True, verbose_name="Rev. No."),
                ),
                (
                    "effective_date",
                    models.DateField(
                        blank=True,
                        default=django.utils.timezone.now,
                        verbose_name="Eff. Date",
                    ),
                ),
                (
                    "machine_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "control_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("process_no", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "month",
                    models.DateField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "checkpoint_1",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 1",
                    ),
                ),
                (
                    "checkpoint_2",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 2",
                    ),
                ),
                (
                    "checkpoint_3",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 3",
                    ),
                ),
                (
                    "checkpoint_4",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 4",
                    ),
                ),
                (
                    "checkpoint_5",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 5",
                    ),
                ),
                (
                    "checkpoint_6",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 6",
                    ),
                ),
                (
                    "checkpoint_7",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 7",
                    ),
                ),
                (
                    "checkpoint_8",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 8",
                    ),
                ),
                (
                    "checkpoint_9",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 9",
                    ),
                ),
                (
                    "checkpoint_10",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 10",
                    ),
                ),
                (
                    "checkpoint_11",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 11",
                    ),
                ),
                (
                    "checkpoint_12",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 12",
                    ),
                ),
                (
                    "checkpoint_13",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 13",
                    ),
                ),
                (
                    "checkpoint_14",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 14",
                    ),
                ),
                (
                    "checkpoint_15",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 15",
                    ),
                ),
                (
                    "checkpoint_16",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 16",
                    ),
                ),
                (
                    "checkpoint_17",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 17",
                    ),
                ),
                (
                    "checkpoint_18",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 18",
                    ),
                ),
                (
                    "checkpoint_19",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 19",
                    ),
                ),
                (
                    "checkpoint_20",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 20",
                    ),
                ),
                (
                    "checkpoint_21",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 21",
                    ),
                ),
                (
                    "checkpoint_22",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 22",
                    ),
                ),
                (
                    "checkpoint_23",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 23",
                    ),
                ),
                (
                    "checkpoint_24",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 24",
                    ),
                ),
                (
                    "checkpoint_25",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        max_length=6,
                        verbose_name="Check Point 25",
                    ),
                ),
                (
                    "verified_by",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK")],
                        default="✔",
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "process_machine",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="StartUpCheckSheet",
                        to="screen_app.processmachinemapping",
                    ),
                ),
                (
                    "process_operation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="screen_app.machinelocation",
                        verbose_name="Process/Operation",
                    ),
                ),
                (
                    "qsf_document",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="StartUpCheckSheet",
                        to="screen_app.qsf",
                    ),
                ),
            ],
            options={
                "verbose_name": "Start Up Check Sheet",
                "verbose_name_plural": "Start Up Check Sheets",
            },
        ),
        migrations.CreateModel(
            name="WeeklyChecklistItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("station", models.CharField(blank=True, max_length=100)),
                (
                    "doc_number",
                    models.CharField(
                        blank=True, default="QSF 13-06", max_length=20, null=True
                    ),
                ),
                (
                    "rev_number",
                    models.CharField(
                        blank=True, default="Rev 02 ", max_length=20, null=True
                    ),
                ),
                (
                    "rev_date",
                    models.DateField(
                        blank=True, default=datetime.date(2022, 12, 31), null=True
                    ),
                ),
                (
                    "shift",
                    models.CharField(
                        blank=True,
                        choices=[("A", "A"), ("B", "B")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "machine_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "control_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("process_no", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "month_year",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "date",
                    models.DateField(blank=True, default=django.utils.timezone.now),
                ),
                (
                    "Remark_8",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "Remark_9",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "Remark_10",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "Remark_11",
                    models.CharField(
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        max_length=100,
                    ),
                ),
                (
                    "checked_by_Operator",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="✔",
                        max_length=100,
                    ),
                ),
                (
                    "approved_by_Supervisor",
                    models.CharField(
                        blank=True,
                        choices=[("✔", "OK"), ("✘", "Not OK"), ("", "Not Checked")],
                        default="✘",
                        max_length=100,
                    ),
                ),
                (
                    "machine_location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="screen_app.machinelocation",
                        verbose_name="Process/Operation",
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "process_machine",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="weekly_process_machine",
                        to="screen_app.processmachinemapping",
                    ),
                ),
                (
                    "qsf_document",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="weekly_checklists",
                        to="screen_app.qsf",
                    ),
                ),
            ],
            options={
                "verbose_name": "Maintenance Checklist For Weekly",
                "verbose_name_plural": "Maintenance Checklists For Weekly",
            },
        ),
        migrations.CreateModel(
            name="ControlChartReading",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("time", models.TimeField(auto_now_add=True)),
                ("reading1", models.FloatField()),
                ("reading2", models.FloatField(blank=True, null=True)),
                ("reading3", models.FloatField(blank=True, null=True)),
                ("reading4", models.FloatField(blank=True, null=True)),
                ("reading5", models.FloatField(blank=True, null=True)),
                (
                    "usl",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "lsl",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("last_notification_time", models.DateTimeField(blank=True, null=True)),
                ("remaining_entries", models.IntegerField(default=5)),
                (
                    "machine",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="control_chart_readings",
                        to="machineapp.machine",
                    ),
                ),
                (
                    "process_machine",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="control_chart_readings",
                        to="screen_app.processmachinemapping",
                    ),
                ),
            ],
            options={
                "unique_together": {("time",)},
            },
        ),
    ]
